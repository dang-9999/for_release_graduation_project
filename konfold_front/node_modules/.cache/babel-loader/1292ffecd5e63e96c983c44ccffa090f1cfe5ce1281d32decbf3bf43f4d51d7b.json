{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/project/konfold_front/src/pages/Search.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Button } from \"@mui/material\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Search extends Component() {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      protein: \"\",\n      proteinName: \"\",\n      Id: \"\",\n      button: true,\n      isAlpha: str => /^[a-zA-Z]*$/.test(str)\n    };\n    this.handleInput = event => {\n      event.preventDefault();\n      setProtein(event.target.value); //변수 저장 완료\n      // const UpperProtein = protein.toUpperCase();\n      // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    };\n    this.confirm = async event => {\n      // 확인 후 다음 페이지\n      event.preventDefault();\n      setProteinName(protein);\n      window.location.href = \"/proteinInput\";\n\n      // const result = await axios.get('http://127.0.0.1:5000/api/Input');\n      // this.recordCount = result.headers[\"x-totalrecordcount\"];\n\n      // axios.get('http://127.0.0.1:5000/api/Input',\n      //   {params: { \"proteinName\" : protein }\n      // }).then(function (response) {\n      //   console.log(protein);\n      //  }).catch(function (error){\n      //   console.log(error);\n      //  })\n\n      await axios.post('/api/Input', {\n        proteinName: protein\n      }).then(function (response) {\n        console.log(\"포스트 완료\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n\n      //  fetch(\"/api/Input\", {\n      //   method : \"POST\",\n      //   headers : {\n      //     \"Content-Type\" : \"application/json; charset=utf-8\"\n      //   }\n      // }).then(res=> {\n      //   console.log(res);\n      //   let hand = JSON.stringify(res);\n      //   console.log( hand + \"얍\");\n      //   //json 파싱전 , 상태 코드 확인 해서 res 값 초기화\n      // }).then(res=> {\n      //   console.log(res + \"얍\");\n      //   setId(res);\n      //   //res 값에 따른 결과 처리\n      //   if(res == null){\n      //     alert(\"등록 실패\");\n      //   }\n      // })\n\n      //console.log(protein);\n\n      //api post\n\n      localStorage.setItem(\"proteinName\", protein);\n      //localstorage 업로드\n    };\n  }\n  // const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  // const [proteinName, setProteinName] = useState(\"\"); // 저장 후 변수\n  // const [Id, setId] = useState([]);\n\n  // const [button, setButton] = useState(true);\n  //const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n  changeButton() {\n    const UpperProtein = protein.toUpperCase();\n\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || !isAlpha(UpperProtein) ? setButton(true) : setButton(false);\n  }\n  render() {\n    /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"page\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"titleprotein\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"contentWrap\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputTitle\",\n          children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inputWrap\",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"input\",\n            value: this.state.protein //input으로 받은 프로틴 시퀀스\n            ,\n            onChange: handleInput,\n            onKeyUp: changeButton\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"errorMessageWrap\",\n          children: \"\\uC62C\\uBC14\\uB978 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          disabled: this.state.button,\n          onClick: confirm,\n          className: \"bottomButton\",\n          children: \"\\uD655\\uC778\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 3D \\uAD6C\\uC870 \\uC2DC\\uAC01\\uD654 \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 5\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","Link","useEffect","useState","Button","jsxDEV","_jsxDEV","Search","constructor","arguments","state","protein","proteinName","Id","button","isAlpha","str","test","handleInput","event","preventDefault","setProtein","target","value","confirm","setProteinName","window","location","href","post","then","response","console","log","catch","error","localStorage","setItem","changeButton","UpperProtein","toUpperCase","includes","setButton","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyUp","disabled","onClick"],"sources":["/Users/hayungyoo/project/konfold_front/src/pages/Search.js"],"sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; \nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Button } from \"@mui/material\";\n\n\n\n\n\nexport default class Search extends Component(){\n\n  state = {\n    protein : \"\",\n    proteinName : \"\",\n    Id : \"\",\n    button : true,\n    isAlpha : str => /^[a-zA-Z]*$/.test(str)\n   }\n    \n  // const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  // const [proteinName, setProteinName] = useState(\"\"); // 저장 후 변수\n  // const [Id, setId] = useState([]);\n\n  // const [button, setButton] = useState(true);\n  //const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n    \n    \n\n   changeButton(){\n    const UpperProtein = protein.toUpperCase();\n   \n   // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    (UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || (!isAlpha(UpperProtein))) ? setButton(true) : setButton(false)\n\n   }\n\n\n   handleInput = (event) => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n  \n  \n    confirm = async (event) => {\n    // 확인 후 다음 페이지\n    event.preventDefault();\n    setProteinName(protein);\n    \n\n    window.location.href = \"/proteinInput\";\n\n    // const result = await axios.get('http://127.0.0.1:5000/api/Input');\n    // this.recordCount = result.headers[\"x-totalrecordcount\"];\n\n    // axios.get('http://127.0.0.1:5000/api/Input',\n    //   {params: { \"proteinName\" : protein }\n    // }).then(function (response) {\n    //   console.log(protein);\n    //  }).catch(function (error){\n    //   console.log(error);\n    //  })\n\n\n     \n         await axios.post('/api/Input',{\n          proteinName: protein\n        }).then(function(response){\n          console.log(\"포스트 완료\");\n        }).catch(function (error){\n          console.log(error);\n        })\n     \n        //  fetch(\"/api/Input\", {\n        //   method : \"POST\",\n        //   headers : {\n        //     \"Content-Type\" : \"application/json; charset=utf-8\"\n        //   }\n        // }).then(res=> {\n        //   console.log(res);\n        //   let hand = JSON.stringify(res);\n        //   console.log( hand + \"얍\");\n        //   //json 파싱전 , 상태 코드 확인 해서 res 값 초기화\n        // }).then(res=> {\n        //   console.log(res + \"얍\");\n        //   setId(res);\n        //   //res 값에 따른 결과 처리\n        //   if(res == null){\n        //     alert(\"등록 실패\");\n        //   }\n        // })\n    \n    //console.log(protein);\n\n    \n    //api post\n      \n    localStorage.setItem(\"proteinName\", protein);\n    //localstorage 업로드\n  };\n  \n\n  render() {\n    <div className=\"page\">\n      <div className=\"titleprotein\">단백질 시퀀스를 입력해 주세요</div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">단백질 시퀀스</div>\n        <div className=\"inputWrap\">\n          <input\n            className=\"input\"\n            value={this.state.protein} //input으로 받은 프로틴 시퀀스\n            onChange={handleInput}\n            onKeyUp={changeButton}\n            \n          />\n\n          {/* place holder 넣어 보기 */}\n        </div>\n\n        <div className=\"errorMessageWrap\">올바른 시퀀스를 입력해 주세요</div>\n      </div>\n      <div>\n        <button \n        disabled={this.state.button} \n        onClick={confirm} \n        className=\"bottomButton\">\n          확인\n        </button>\n      </div>\n      <div className=\"inputTitle\"> \n        단백질 3D 구조 시각화 화면입니다\n      </div>\n    </div>\n  };\n}\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,IAAI,QAAQ,kBAAkB;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,MAAM,QAAQ,eAAe;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMvC,eAAe,MAAMC,MAAM,SAASR,SAAS,CAAC,CAAC;EAAAS,YAAA;IAAA,SAAAC,SAAA;IAAA,KAE7CC,KAAK,GAAG;MACNC,OAAO,EAAG,EAAE;MACZC,WAAW,EAAG,EAAE;MAChBC,EAAE,EAAG,EAAE;MACPC,MAAM,EAAG,IAAI;MACbC,OAAO,EAAGC,GAAG,IAAI,aAAa,CAACC,IAAI,CAACD,GAAG;IACxC,CAAC;IAAA,KAqBDE,WAAW,GAAIC,KAAK,IAAK;MACxBA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBC,UAAU,CAACF,KAAK,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;MAChC;MACA;IACF,CAAC;IAAA,KAGCC,OAAO,GAAG,MAAOL,KAAK,IAAK;MAC3B;MACAA,KAAK,CAACC,cAAc,CAAC,CAAC;MACtBK,cAAc,CAACd,OAAO,CAAC;MAGvBe,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,eAAe;;MAEtC;MACA;;MAEA;MACA;MACA;MACA;MACA;MACA;MACA;;MAIK,MAAM5B,KAAK,CAAC6B,IAAI,CAAC,YAAY,EAAC;QAC7BjB,WAAW,EAAED;MACf,CAAC,CAAC,CAACmB,IAAI,CAAC,UAASC,QAAQ,EAAC;QACxBC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;MACvB,CAAC,CAAC,CAACC,KAAK,CAAC,UAAUC,KAAK,EAAC;QACvBH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MACpB,CAAC,CAAC;;MAEF;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;MACA;;MAEJ;;MAGA;;MAEAC,YAAY,CAACC,OAAO,CAAC,aAAa,EAAE1B,OAAO,CAAC;MAC5C;IACF,CAAC;EAAA;EAlFD;EACA;EACA;;EAEA;EACA;EAIC2B,YAAYA,CAAA,EAAE;IACb,MAAMC,YAAY,GAAG5B,OAAO,CAAC6B,WAAW,CAAC,CAAC;;IAE3C;IACC;IACCD,YAAY,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAIF,YAAY,CAACE,QAAQ,CAAC,GAAG,CAAC,IAAK,CAAC1B,OAAO,CAACwB,YAAY,CAAE,GAAIG,SAAS,CAAC,IAAI,CAAC,GAAGA,SAAS,CAAC,KAAK,CAAC;EAEpP;EAqEDC,MAAMA,CAAA,EAAG;IACP,aAAArC,OAAA;MAAKsC,SAAS,EAAC,MAAM;MAAAC,QAAA,gBACnBvC,OAAA;QAAKsC,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eAEpD3C,OAAA;QAAKsC,SAAS,EAAC,aAAa;QAAAC,QAAA,gBAC1BvC,OAAA;UAAKsC,SAAS,EAAC,YAAY;UAAAC,QAAA,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACzC3C,OAAA;UAAKsC,SAAS,EAAC,WAAW;UAAAC,QAAA,eACxBvC,OAAA;YACEsC,SAAS,EAAC,OAAO;YACjBrB,KAAK,EAAE,IAAI,CAACb,KAAK,CAACC,OAAQ,CAAC;YAAA;YAC3BuC,QAAQ,EAAEhC,WAAY;YACtBiC,OAAO,EAAEb;UAAa;YAAAQ,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAEvB;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAGC,CAAC,eAEN3C,OAAA;UAAKsC,SAAS,EAAC,kBAAkB;UAAAC,QAAA,EAAC;QAAgB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACrD,CAAC,eACN3C,OAAA;QAAAuC,QAAA,eACEvC,OAAA;UACA8C,QAAQ,EAAE,IAAI,CAAC1C,KAAK,CAACI,MAAO;UAC5BuC,OAAO,EAAE7B,OAAQ;UACjBoB,SAAS,EAAC,cAAc;UAAAC,QAAA,EAAC;QAEzB;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN,CAAC,eACN3C,OAAA;QAAKsC,SAAS,EAAC,YAAY;QAAAC,QAAA,EAAC;MAE5B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EACR;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}