{"ast":null,"code":"var _jsxFileName = \"/Users/hayungyoo/project/konfold_front/src/pages/Search.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport AFoutput from \"../AFoutput\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  const [proteinName, setProteinName] = useState(\"\"); // 저장 후 변수\n  const [Id, setId] = useState([]);\n  const [button, setButton] = useState(true);\n  const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n  function changeButton() {\n    const UpperProtein = protein.toUpperCase();\n\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || !isAlpha(UpperProtein) ? setButton(true) : setButton(false);\n  }\n  const handleInput = event => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n\n  function test(Id) {\n    AFoutput(Id);\n    function confirm() {\n      // 확인 후 다음 페이지\n      // event.preventDefault();\n      setProteinName(protein);\n      window.location.href = \"/proteinInput\";\n\n      // const result = await axios.get('http://127.0.0.1:5000/api/Input');\n      // this.recordCount = result.headers[\"x-totalrecordcount\"];\n\n      // axios.get('http://127.0.0.1:5000/api/Input',\n      //   {params: { \"proteinName\" : protein }\n      // }).then(function (response) {\n      //   console.log(protein);\n      //  }).catch(function (error){\n      //   console.log(error);\n      //  })\n\n      axios.post('/api/Input', {\n        proteinName: protein\n      }).then(function (response) {\n        console.log(\"포스트 완료\");\n      }).catch(function (error) {\n        console.log(error);\n      });\n      fetch(\"/api/Input\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json; charset=utf-8\"\n        }\n      }).then(res => {\n        console.log(res);\n        //json 파싱전 , 상태 코드 확인 해서 res 값 초기화\n      }).then(res => {\n        console.log(res);\n        setId(res);\n\n        //res 값에 따른 결과 처리\n        if (res == null) {\n          alert(\"등록 실패\");\n        }\n      });\n\n      //console.log(protein);\n\n      //api post\n\n      localStorage.setItem(\"proteinName\", protein);\n      //localstorage 업로드\n    }\n    ;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"titleprotein\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"contentWrap\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputTitle\",\n        children: \"\\uB2E8\\uBC31\\uC9C8 \\uC2DC\\uD000\\uC2A4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"inputWrap\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"input\",\n          value: protein //input으로 받은 프로틴 시퀀스\n          ,\n          onChange: handleInput,\n          onKeyUp: changeButton\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"errorMessageWrap\",\n        children: \"\\uC62C\\uBC14\\uB978 \\uC2DC\\uD000\\uC2A4\\uB97C \\uC785\\uB825\\uD574 \\uC8FC\\uC138\\uC694\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        disabled: button,\n        onClick: test(Id),\n        className: \"bottomButton\",\n        children: \"\\uD655\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputTitle\",\n      children: \"\\uB2E8\\uBC31\\uC9C8 3D \\uAD6C\\uC870 \\uC2DC\\uAC01\\uD654 \\uD654\\uBA74\\uC785\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n_s(Search, \"ZwaICwWgAPRZOIh9VPf8+vTkOyI=\");\n_c = Search;\nvar _c;\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"names":["React","axios","Link","useEffect","useState","AFoutput","jsxDEV","_jsxDEV","Search","_s","protein","setProtein","proteinName","setProteinName","Id","setId","button","setButton","isAlpha","str","test","changeButton","UpperProtein","toUpperCase","includes","handleInput","event","preventDefault","target","value","confirm","window","location","href","post","then","response","console","log","catch","error","fetch","method","headers","res","alert","localStorage","setItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","onKeyUp","disabled","onClick","_c","$RefreshReg$"],"sources":["/Users/hayungyoo/project/konfold_front/src/pages/Search.js"],"sourcesContent":["import React from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\"; \nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport AFoutput from \"../AFoutput\";\n\n\n\n\n\nexport default function Search(){\n    \n  const [protein, setProtein] = useState(\"\"); //입력 값 변수 [입력값, 입력값 변경]\n  const [proteinName, setProteinName] = useState(\"\"); // 저장 후 변수\n  const [Id, setId] = useState([]);\n\n  const [button, setButton] = useState(true);\n  const isAlpha = str => /^[a-zA-Z]*$/.test(str);\n    \n    \n\n  function changeButton(){\n    const UpperProtein = protein.toUpperCase();\n   \n   // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    // UpperProtein.includes('G'||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n    (UpperProtein.includes(\"B\") || UpperProtein.includes(\"J\") || UpperProtein.includes(\"O\") || UpperProtein.includes(\"X\") || UpperProtein.includes(\"Z\") || UpperProtein.includes(\" \") || (!isAlpha(UpperProtein))) ? setButton(true) : setButton(false)\n\n   }\n\n\n  const handleInput = (event) => {\n    event.preventDefault();\n    setProtein(event.target.value); //변수 저장 완료\n    // const UpperProtein = protein.toUpperCase();\n    // UpperProtein.includes('G' ||'A'||'V'||'L'||'I'||'S'||'T'||'C'||'M'||'D'||'E'||'N'||'Q'||'K'||'R'||'F'||'Y'||'W'||'H'||'P'||'U') ? setButton(false) : setButton(true)\n  };\n  function test(Id){\n    \n    AFoutput(Id);\n\n    function confirm(){\n      // 확인 후 다음 페이지\n      // event.preventDefault();\n      setProteinName(protein);\n      \n  \n      window.location.href = \"/proteinInput\";\n  \n      // const result = await axios.get('http://127.0.0.1:5000/api/Input');\n      // this.recordCount = result.headers[\"x-totalrecordcount\"];\n  \n      // axios.get('http://127.0.0.1:5000/api/Input',\n      //   {params: { \"proteinName\" : protein }\n      // }).then(function (response) {\n      //   console.log(protein);\n      //  }).catch(function (error){\n      //   console.log(error);\n      //  })\n  \n  \n       axios.post('/api/Input',{\n        proteinName: protein\n       }).then(function(response){\n        console.log(\"포스트 완료\");\n       }).catch(function (error){\n        console.log(error);\n       })\n  \n       fetch(\"/api/Input\", {\n        method : \"POST\",\n        headers : {\n          \"Content-Type\" : \"application/json; charset=utf-8\"\n        }\n      }).then(res=> {\n        console.log(res);\n        //json 파싱전 , 상태 코드 확인 해서 res 값 초기화\n      }).then(res=> {\n        console.log(res);\n        setId(res);\n        \n        //res 값에 따른 결과 처리\n        if(res == null){\n          alert(\"등록 실패\");\n        }\n      });\n  \n       \n       \n      \n      //console.log(protein);\n  \n      \n      //api post\n        \n      localStorage.setItem(\"proteinName\", protein);\n      //localstorage 업로드\n    };\n  }\n  \n  \n   \n\n  return (\n    \n    <div className=\"page\">\n      \n      <div className=\"titleprotein\">단백질 시퀀스를 입력해 주세요</div>\n\n      <div className=\"contentWrap\">\n        <div className=\"inputTitle\">단백질 시퀀스</div>\n        <div className=\"inputWrap\">\n          <input\n            className=\"input\"\n            value={protein} //input으로 받은 프로틴 시퀀스\n            onChange={handleInput}\n            onKeyUp={changeButton} />\n\n          {/* place holder 넣어 보기 */}\n        </div>\n\n        <div className=\"errorMessageWrap\">올바른 시퀀스를 입력해 주세요</div>\n      </div>\n      <div>\n        <button\n          disabled={button}\n          onClick={test(Id)}\n          \n          className=\"bottomButton\">\n          확인\n        </button>\n      </div>\n      <div className=\"inputTitle\">\n        단백질 3D 구조 시각화 화면입니다\n      </div>\n    </div>\n  );\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}